<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Filer on stuart crust</title>
    <link>https://stuartcrust.com/categories/filer/</link>
    <description>Recent content in Filer on stuart crust</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Sep 2018 00:00:00 -0400</lastBuildDate>
    
        <atom:link href="https://stuartcrust.com/categories/filer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Return to Open Source</title>
      <link>https://stuartcrust.com/2018/09/a-return-to-open-source/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>https://stuartcrust.com/2018/09/a-return-to-open-source/</guid>
      <description>&lt;div class=&#34;document&#34;&gt;


&lt;p&gt;Today marks the first month of my return to open source. I say &lt;em&gt;return&lt;/em&gt; even though I never really &lt;em&gt;left&lt;/em&gt;, it&#39;s more of a return to active participation in the community. As I &lt;a class=&#34;reference external&#34; href=&#34;https://stuartcrust.com/2018/09/third-times-the-charm/&#34;&gt;wrote about earlier&lt;/a&gt;, one of my courses right now focuses on open source development, so I have been able to &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/0xazure?tab=overview&amp;amp;from=2018-09-01&amp;amp;to=2018-09-30&#34;&gt;contribute much more regularly&lt;/a&gt; and I hope to be able to continue to do so even after the course is over.&lt;/p&gt;
&lt;p&gt;This past month has been all about getting back into the swing of things by contributing to &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer&#34;&gt;filerjs/filer&lt;/a&gt;, a port of NodeJS&#39; &lt;tt class=&#34;docutils literal&#34;&gt;fs&lt;/tt&gt; module to the web using backends like IndexedDB. My first contribution to filer, which I have &lt;a class=&#34;reference external&#34; href=&#34;https://stuartcrust.com/2018/09/its-dependencies-all-the-way-down/&#34;&gt;already blogged about&lt;/a&gt;, was to update a development dependency to resolve package vulnerabilities as reported by &lt;tt class=&#34;docutils literal&#34;&gt;npm audit&lt;/tt&gt;. This issue was logged as &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/issues/384&#34;&gt;filer#384&lt;/a&gt; and fixed in &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/pull/385&#34;&gt;filer#385&lt;/a&gt; by updating the vulnerable dependency. This issue also spawned some discussion as &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/issues/386&#34;&gt;filer#386&lt;/a&gt; about automating the process of keeping project dependencies up to date so it is much easier to stay on top of new versions of dependencies.&lt;/p&gt;
&lt;p&gt;Open source isn&#39;t just about contributing code and documentation though. It&#39;s also about the community, interacting with other developers, discussing issues and potential solutions, as well as reviewing and helping out other members of the community. In addition to helping out my classmates over Slack and in-class throughout the month, I also reviewed a few pull requests opened against the filer repository.&lt;/p&gt;
&lt;p&gt;The first issue I reviewed, &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/pull/478&#34;&gt;filer#478&lt;/a&gt;, is a pull request that adds a test to &lt;tt class=&#34;docutils literal&#34;&gt;fs.watch()&lt;/tt&gt; to verify the event type emitted when renaming an existing file. Other than the boilerplate mocha test code, the test logic itself is fairly straight forward. However, &lt;tt class=&#34;docutils literal&#34;&gt;fs.watch()&lt;/tt&gt; and related watching functions are an interesting set of methods because they are not guaranted to be consistent due to the &lt;a class=&#34;reference external&#34; href=&#34;https://nodejs.org/api/fs.html#fs_caveats&#34;&gt;underlying implementation details&lt;/a&gt;. I actually had to go back to this pull request and re-review it because it turns out that filer &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/issues/411#issuecomment-422946490&#34;&gt;doesn&#39;t currently have support&lt;/a&gt; for &lt;tt class=&#34;docutils literal&#34;&gt;rename&lt;/tt&gt; events at all. This issue was also interesting because I picked out a minor style nitpick in the form of a missing semi-colon that the Travis build &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/issues/482&#34;&gt;didn&#39;t seem to pick up&lt;/a&gt; for some reason. Rerunning the build resolved the issue, but it&#39;s always worrying when you run into issues with your build infrastructure and tests because it can shake your faith in them a bit.&lt;/p&gt;
&lt;p&gt;Another issue that I reviewed was &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/pull/472&#34;&gt;filer#472&lt;/a&gt;. This pull request adds a test to ensure that reading from a nonexistant file results in an error. The submission is well done overall, with one minor nitpick that lead to me filing &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/filerjs/filer/pull/498&#34;&gt;filer#498&lt;/a&gt; to reduce small nitpick-type comments on reviews. Nitpicks are generally a waste of everyone&#39;s time because style should be automatically enforced by some kind of automated tool before code is pushed; JavaScript doesn&#39;t have anything quite like &lt;a class=&#34;reference external&#34; href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt; or &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/rust-lang-nursery/rustfmt&#34;&gt;rustfmt&lt;/a&gt;, but tools like &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/xojs/xo&#34;&gt;xo&lt;/a&gt; and &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/prettier/prettier&#34;&gt;prettier&lt;/a&gt; can help. In this review I also cautioned the original author of the pull request about changing multiple variables at a time in a test, which we ideally would like to avoid as we can easily end up testing more code paths than we either need or want to, thereby complicating the test or making it fragile against future changes to the code.&lt;/p&gt;
&lt;p&gt;Looking ahead, October marks the beginning of &lt;a class=&#34;reference external&#34; href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;Hacktoberfest&lt;/a&gt;. I&#39;m really excited to be participating this year; I participated once before but I either missed the cutoff or something happened to my package because I never received my t-shirt from DigitalOcean. I&#39;ll be writing a lot more short blog posts throughout October as I chronicle my participation in this event, and I&#39;m hoping to find some interesting projects to contribute to for at least the rest of this year and hopefully well into the next.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
